# Default values for metashot
replicaCount: 1

image:
  repository: metashot
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1001

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables
env:
  # Server configuration
  PORT: "8080"
  NODE_ENV: "production"
  
  # Metabase configuration
  METABASE_SITE_URL: ""
  
  # S3 configuration
  S3_BUCKET: ""
  S3_REGION: "us-east-1"
  S3_ACCESS_KEY_ID: ""
  # S3_ENDPOINT: ""  # Only needed if not using AWS S3 directly (e.g., for MinIO or other S3-compatible services)
  
  # Optional configuration
  PRESIGNED_URL_EXPIRY: "3600"

# Environment variables from external sources (secrets, configmaps, etc.)
# This allows injecting environment variables from different sources
# Use this to provide sensitive values like AUTH_TOKEN, METABASE_SECRET_KEY, S3_SECRET_ACCESS_KEY
envFrom: []
# Examples:
# envFrom:
#   - secretRef:
#       name: metashot-secrets
#   - configMapRef:
#       name: metashot-config

# Health check configuration
livenessProbe:
  enabled: true
  httpGet:
    path: /api/health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  enabled: true
  httpGet:
    path: /api/health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Additional volumes and volume mounts
volumes: []
volumeMounts: []

# Extra objects to deploy alongside the application
# This allows deploying arbitrary Kubernetes objects
extraObjects: []
# Example:
# extraObjects:
#   - apiVersion: v1
#     kind: Secret
#     metadata:
#       name: example-secret
#       namespace: {{ .Release.Namespace }}
#     data:
#       key: dmFsdWU=
#   - apiVersion: batch/v1
#     kind: Job
#     metadata:
#       name: example-job
#     spec:
#       template:
#         spec:
#           containers:
#           - name: example
#             image: busybox
#             command: ["echo", "hello world"]
#           restartPolicy: Never