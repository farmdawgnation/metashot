name: Publish Docker Image

on:
  release:
    types: [published]
  repository_dispatch:
    types: [release-created]
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to publish (e.g., v1.0.0)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # Only run for manual/release/repository_dispatch triggers
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'release') ||
      (github.event_name == 'repository_dispatch' && github.event.action == 'release-created')
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Determine release info (pre-checkout)
      id: release-info-pre
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          echo "checkout_ref=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "checkout_ref=${{ github.event.inputs.release_tag }}" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" = "repository_dispatch" ]; then
          echo "checkout_ref=${{ github.event.client_payload.tag_name }}" >> $GITHUB_OUTPUT
        fi
    
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ steps.release-info-pre.outputs.checkout_ref }}
        fetch-depth: 0
    
    - name: Determine final release info
      id: release-info
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          echo "checkout_ref=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "tag=${{ github.event.inputs.release_tag }}" >> $GITHUB_OUTPUT
          echo "checkout_ref=${{ github.event.inputs.release_tag }}" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" = "repository_dispatch" ]; then
          echo "tag=${{ github.event.client_payload.tag_name }}" >> $GITHUB_OUTPUT
          echo "checkout_ref=${{ github.event.client_payload.tag_name }}" >> $GITHUB_OUTPUT
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}},value=${{ steps.release-info.outputs.tag }}
          type=semver,pattern={{major}}.{{minor}},value=${{ steps.release-info.outputs.tag }}
          type=semver,pattern={{major}},value=${{ steps.release-info.outputs.tag }}
          type=raw,value=latest
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
